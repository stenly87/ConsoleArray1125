// See https://aka.ms/new-console-template for more information
// массивы в c#
// статический тип данных
// хранит множество значений определенного типа
// существует два видов массивов с точки зрения
// размерности: одномерный и n-мерный

// одномерный массив создается так:

// тип[] названиеМассива;
// инициализация одномерного массива:
// названиеМассива = new тип[размер];
// названиеМассива = new тип[размер]{эл1, эл2}; // в этом случае кол-во элементов в {} должно равняться размеру
// названиеМассива = new тип[]{эл1, эл2};// в этом случае размер вычисляется из указанных элементов
// [] пустые квадратные скобки указывают на то, что
// массив одномерный
int[] array = new int[] { 1, 2 };

// сокращенный вариант
array = [5, 6];

// если нужен 2-мерный массив, между квадратных скобок указывается запятая
string[,] strings = new string[2,2];
// инициализация двумерного массива предполагает указание
// размера для каждой плоскости
// пример инициализации двумерного массива с указанием значений
string[,] strings2 = new string[2, 2] 
    { {"1", "2" }, { "3", "4"} };

// пример работы с ячейками, одномерный массив
array[0] = 10; // запись ячейки
int value = array[1]; // чтение ячейки
for(int i = 0; i < array.Length; i++)
    Console.WriteLine(array[i]);

// ошибка! в массиве array есть всего две ячейки, индексы: 0 и 1
//var tryMe = array[2];

Console.WriteLine($"Длина массива array: {array.Length}");

// массивы в c# являются неизменяемыми с точки зрения длины
// в случае, если нам не хватает массива и нужны дополнительные ячейки
// нужно создать новый массив, скопировать туда значения из старого массива
// и переназначить ссылку по необходимости

{
    int[] newArray = new int[5];
    for (int i = 0; i < array.Length; i++)
        newArray[i] = array[i]; // копирование старых значений

    // альтернативый вариант копирования старых значений
    array.CopyTo(newArray, 3); // 3 - индекс в новом массиве, откуда начнется запись значений из старого массива
    // еще одна альтернатива - создатся новый массив, скопируются данные, ссылка будет переназначена на новый массив
    //Array.Resize(ref array, 5);

    // можно сделать так, чтобы старая переменная array
    // стала указывать на новый массив
    array = newArray;
}

// повторный вывод обновленного массива
for (int i = 0; i < array.Length; i++)
    Console.WriteLine(array[i]);

// работа с двумерным массивом
strings2[0, 0] = "Привет";
int allCellCount = strings2.Length; // сколько всего ячеек
int rows = strings2.GetLength(0); // кол-во строк
int cols = strings2.GetLength(1); // кол-во столбцов

// перебор элементов в двумерном массиве
// перебираем строки
for (int i = 0; i < rows; i++)
{   // перебираем столбцы
    for (int j = 0; j < cols; j++)
    {
        Console.WriteLine(strings2[i,j]);
    }
}
Console.WriteLine();

//var - определение типа из контекста
//var test = 1; // без значения нельзя создать переменную с помощью слова var
// происходит перебор всех ячеек, независимо от 
// размерности массива
foreach (var cell in strings2)
{
    // в переменную cell производится копирование ссылки
    // на каждую ячейку в массиве
    Console.WriteLine(cell);
    //cell = "adsas"; // мы не можем изменить значения в массиве с помощью переменной цикла foreach
}
// пример трехмерного массива
byte[,,] bytes = new byte[10, 2, 2];
bytes[0, 0, 0] = 0;

// 11.26
Console.WriteLine("Размер массива?");
int.TryParse(Console.ReadLine(), out int lenght);

Random random = new Random();

int[] ints = new int[lenght];
for (int i = 0; i < ints.Length; i++)
{
    // вариант с генерацией значений
    ints[i] = random.Next(-100, 101);
    // вариант с ручным вводом
    //Console.Write("Введите {i}-ый элемент: ");
    //int.TryParse(Console.ReadLine(), out ints[i]);  
}

for (int i = 0; i < ints.Length; i++)
    if (ints[i] >= 0)
        Console.WriteLine(ints[i]);

for (int i = 0; i < ints.Length; i++)
    if (ints[i] < 0)
        Console.WriteLine(ints[i]);